<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Robert Gunner Feie</title>
    <description>Website and blog for Robert Gunner Feie
</description>
    <link>http://rfeie.com/</link>
    <atom:link href="http://rfeie.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 06 Nov 2016 14:38:00 -0600</pubDate>
    <lastBuildDate>Sun, 06 Nov 2016 14:38:00 -0600</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Self-Taught Programmer Part 1: Choose your own adventure</title>
        <description>&lt;p&gt;This is part one of a series of posts focusing on the constant process of learning as a self-taught programmer. &lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;First let me give you my background. I am a self-taught web developer focused on Ruby on 
Rails and React. I first started learning through MOOCs about anything under the
sun (Python, Android, Node, SQL) but I eventually focused on learning web
development with a focus on Ruby on Rails and React.&lt;/p&gt;

&lt;p&gt;This first blog post is speaking from the perspective as you first begin to learn.
When you have decided that you want to pursue learning more about programming,  you may have decided what you want to focus on or you are still looking to
learn.&lt;/p&gt;

&lt;h3 id=&quot;learning&quot;&gt;Learning&lt;/h3&gt;
&lt;p&gt;Now that you want to learn lets give you a couple places to start with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.coursera.org/&quot;&gt; Coursera &lt;/a&gt;(Free, mostly) - One of the leaders of MOOCs (Massive Open Online
Courses). Classes are free but Coursera offers ‘certifications’ that are
chained together courses for a specific field (like web development). This is
a great place to start as they have courses that are aimed at the very
beginner then you can transition to a specialization or more advanced topics.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codecademy.com/&quot;&gt; Codecademy &lt;/a&gt;(Free)- Another provider of online courses. Codecademy
is very useful when you are first starting. Many of the courses assume little
to no prior knowledge and have an interactive element and step-by-step process
that is very helpful when you are first learning the basics of programming.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.pluralsight.com&quot;&gt; Pluralsight &lt;/a&gt;(Subscription) - Pluralsight is more focused on
existing developers but has recently implemented ‘Paths’ that allow you to
choose a specific language and watch a curated list of courses aimed at
bringing you up to speed.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.theodinproject.com/&quot;&gt; The Odin Project &lt;/a&gt;(Free) - Focused on Ruby on Rails and
JavaScript this resource is an aggregation of open source resources aimed at
bringing you up to speed as a web developer. I went through every path on this
with the exception of JavaScript and found it to be invaluable. They spend a
good amount of attention on aspects a single course or video may not focus on.
Such as Git, computer science concepts and testing.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udacity.com/&quot;&gt; Udacity &lt;/a&gt;(Free and paid courses) - Listed last as I have never
used Udacity but I have heard good things and it has been on my ‘To do’ list
to look into their nano degrees. Udacity has a mix of free courses and nano
degree programs aimed at teaching you a specific skill.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;give-yourself-a-project&quot;&gt;Give yourself a project&lt;/h3&gt;
&lt;p&gt;Once you have started learning my best advice to you would be to give yourself a
project. If there is one thing I learned nothing is more valuable than giving
yourself a project to focus on.&lt;/p&gt;

&lt;p&gt;Depending on the path this could be something as simple as the front-end to a
website in JavaScript, or a command line game in Ruby or Java. The important
part in my mind is having to write it yourself without an external source
guiding you along. You will natually make more mistakes and catch more bugs as
you start to build the mental muscles of visualizing ideas in code.&lt;/p&gt;

&lt;h3 id=&quot;tips&quot;&gt;Tips&lt;/h3&gt;
&lt;p&gt;Some quick tips as you get started:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a &lt;a href=&quot;https://www.github.com/&quot;&gt; Github &lt;/a&gt; account. Using Github to centrally store all of
your code will be useful and get you used to using git&lt;/li&gt;
  &lt;li&gt;Keep a schedule you reliably work every day. I use the &lt;a href=&quot;http://productiveapp.io/&quot;&gt;Productive
App&lt;/a&gt; to have a list of learning and development goals to hit every
day to keep me on track.&lt;/li&gt;
  &lt;li&gt;Podcasts: Start listening to tech podcasts. I have found that even when I may
not know exactly what they are talking about actually hearing people discuss
programming is great and you start to build a mental model of programming
concepts outside your immediate sphere.&lt;/li&gt;
  &lt;li&gt;Start attending &lt;a href=&quot;https://www.meetup.com/&quot;&gt;Meetups&lt;/a&gt;. These are great to meet people in your
community but they also expose you to new ideas and concepts you may not run
into on your own.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;That concludes part one. I look forward to communicating with you again on part
two. Happy Coding!&lt;/p&gt;

</description>
        <pubDate>Sun, 06 Nov 2016 11:35:09 -0600</pubDate>
        <link>http://rfeie.com/2016/11/06/blog-self-taught-getting-started.html</link>
        <guid isPermaLink="true">http://rfeie.com/2016/11/06/blog-self-taught-getting-started.html</guid>
        
        <category>guide</category>
        
        
      </item>
    
      <item>
        <title>HATEOAS (Hypermedia as the Engine of Application State)</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://thoughtbot.com/upcase/videos/rest&quot;&gt;Upcase&lt;/a&gt; REST Iteration&lt;/p&gt;

&lt;p&gt;A constraint of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;REST&lt;/a&gt; specification. Basically states that responses
from the server should include hyperlinks to any available resources and
actions. For example a JSON response listing all products for an index page would
also include hyperlinks to each product.&lt;/p&gt;

</description>
        <pubDate>Tue, 01 Nov 2016 19:35:09 -0500</pubDate>
        <link>http://rfeie.com/2016/11/01/fn-hateoas.html</link>
        <guid isPermaLink="true">http://rfeie.com/2016/11/01/fn-hateoas.html</guid>
        
        <category>rest</category>
        
        
      </item>
    
      <item>
        <title>Working with Calendar in the Google API Gem</title>
        <description>&lt;p&gt;I have started building a scheduling web app in my free time. Eventually a user will be able to choose which calendar you will want to schedule to but I am starting with Google Calendar. Because the gem is in alpha the documentation for the Google API and Calendar are sparse. So I wanted to create a short synopsis of my process getting it working.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;The app’s name is Little Clerk. The general flow is I will receive a forwarded email, parse the event out of it and schedule it to the user’s Google Calendar. This seemed like a good next-step to get myself to build an app that interacts with an API and doesn’t just need to do CRUD operations. I started with getting my interation with Google’s API down. I decided to use their ruby &lt;a href=&quot;https://github.com/google/google-api-ruby-client&quot;&gt;gem&lt;/a&gt; to handle the raw interactions with the API. NOTE: This gem is in alpha so it can (and probably will) change.&lt;/p&gt;

&lt;p&gt;This post won’t cover the entirety of the process of setting up the gem to work on your app. I was fortunate to find the following &lt;a href=&quot;http://readysteadycode.com/howto-access-the-google-calendar-api-with-ruby&quot;&gt;guide&lt;/a&gt; that helped me set it up.&lt;/p&gt;

&lt;h6 id=&quot;for-this-post-i-will-be-focusing-on-the-following-pieces&quot;&gt;For this post I will be focusing on the following pieces:&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;Implementing using the refresh token so you do not have to have the user re-authenticate every hour.&lt;/li&gt;
  &lt;li&gt;Scheduling an actual event to the user’s calendar&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;implementing-the-refresh-token&quot;&gt;Implementing the refresh token&lt;/h2&gt;

&lt;p&gt;If you implement the gem in the way the &lt;a href=&quot;http://readysteadycode.com/howto-access-the-google-calendar-api-with-ruby&quot;&gt;guide&lt;/a&gt; tells you to your access to the user’s calendar will only last for a certain amount of time and at that point the token will expire and the user would have to reauthenticate. Luckily in the return data from the initial authorization there is also a refresh token. If you set your application to request offline access this refresh token will allow us to get a new token when necessary.&lt;/p&gt;

&lt;p&gt;When I find the user in &lt;code class=&quot;highlighter-rouge&quot;&gt;User#find_for_google_oauth2&lt;/code&gt; I storing some additional information:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;token_refresh_date: The datetime the token provided will expire. I check this to see if I need to request a new token.&lt;/li&gt;
  &lt;li&gt;refresh_token: This is the actual token you will use to request a new token&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_for_google_oauth2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;signed_in_resource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;info&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;email: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;provider&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uid&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;token&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;token_refresh_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;zone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;expires_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_datetime&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;refresh_token&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;refresh_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;refresh_token&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_user_registration_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;notice: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Failed to find for Google Auth.&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;expires_at&lt;/code&gt; is supplied in Unix time so I convert it to a datetime and store it in the user. I am checking if &lt;code class=&quot;highlighter-rouge&quot;&gt;refresh_token&lt;/code&gt; is available just in case the user had already authenticated. Once you have the refresh token and when it expires we can work on the authorization.&lt;/p&gt;

&lt;p&gt;I stored the handling of the authorization in a separate class from the class in charge of scheduling:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;TOKEN_CREDENTIAL_URI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://accounts.google.com/o/oauth2/token&quot;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;REDIRECT_URI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://localhost:1234/users/auth/google_oauth2/callback'&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;AUTHORIZATION_URI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://accounts.google.com/o/oauth2/auth&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GoogleAuthorizer&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;client: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Signet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;OAuth2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;access_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;token&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'GOOGLE_CLIENT_ID'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client_secret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'GOOGLE_CLIENT_SECRET'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;token_credential_uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TOKEN_CREDENTIAL_URI&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;redirect_uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;REDIRECT_URI&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authorization_uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AUTHORIZATION_URI&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;grant_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;refresh_token&quot;&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;refresh_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;refresh_token&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scope&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;profile, calendar, offline&quot;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refresh_needed?&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;refresh_access_token&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;authorization&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@client&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;refresh_access_token&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;authorization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch_access_token!&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;access_token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;token_refresh_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;zone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;expires_in&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;refresh_needed?&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;token_refresh_date&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;token_refresh_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;zone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A couple things are happening here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I am setting all the usual necessary information into Signet.&lt;/li&gt;
  &lt;li&gt;In addition to the normal information I am setting the grant_type to refresh_token and setting the refresh_token to the stored refresh token.&lt;/li&gt;
  &lt;li&gt;Once the object is set up I check if a refresh is necessary by comparing the refresh date to now.&lt;/li&gt;
  &lt;li&gt;If a refresh is needed I call &lt;code class=&quot;highlighter-rouge&quot;&gt;fetch_access_token!&lt;/code&gt; and set the new token and token_refresh_date for the user&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once the authorization is set up we can move on to scheduling an event.&lt;/p&gt;

&lt;h2 id=&quot;scheduling-an-event&quot;&gt;Scheduling an event&lt;/h2&gt;

&lt;p&gt;The event scheduling is relatively easier. There are only a couple things we have to do.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'google/apis/calendar_v3'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GoogleEventCreator&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;attr_accessor&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:client&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@service&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Google&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Apis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CalendarV3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CalendarService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authorization&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authorization&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_date_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end_date_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;summary: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                              &lt;span class=&quot;ss&quot;&gt;location: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;ss&quot;&gt;start: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_date_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                                &lt;span class=&quot;ss&quot;&gt;end: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end_date_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;insert_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'primary'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;send_notifications: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calendar&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@_calendar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Google&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Apis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CalendarV3&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_zone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;US/Central&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;utc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;iso8601&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EventDateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;date_time: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;time_zone: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time_zone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;First we will initialize an instance of the Calendar service. Then pass the Signet library to the new object.&lt;/p&gt;

&lt;p&gt;When we create the event we have to supply the event information. Create a new event from the API client and pass in the required information. The start and end datetimes have be formatted just so. Google &lt;a href=&quot;https://developers.google.com/schemas/formats/datetime-formatting&quot;&gt;expects&lt;/a&gt; them to be ISO 8601. So we will take the time and parse and convert it.&lt;/p&gt;

&lt;p&gt;Once the Event has been created we can insert it. Currently I am hard-coding the ‘primary’ calendar for the user as well as whether to send_notifications. In the future this will be driven by the Rule that causes these events to be created. But that is for another blog post.&lt;/p&gt;

&lt;p&gt;Here are the big To Dos that I will to get to when I have time:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Transition to &lt;a href=&quot;https://github.com/google/google-auth-library-ruby&quot;&gt;Google Auth&lt;/a&gt; from Signet. The API gem is planning on moving towards that as the authorization library.&lt;/li&gt;
  &lt;li&gt;I need to set up logic to watch for the &lt;a href=&quot;https://developers.google.com/identity/protocols/OAuth2#expiration&quot;&gt;following&lt;/a&gt;:
    &lt;ul&gt;
      &lt;li&gt;The user has revoked access.&lt;/li&gt;
      &lt;li&gt;The refresh token has not been used for six months.&lt;/li&gt;
      &lt;li&gt;The user changed passwords and the token contains Gmail, Calendar, Contacts, or Hangouts scopes.&lt;/li&gt;
      &lt;li&gt;The user account has exceeded a certain number of refresh token requests.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Until then. Stay tuned, I will be making a lot more updates to this applicaiton in the coming months and I am planning on documenting it here.&lt;/p&gt;

</description>
        <pubDate>Sat, 10 Sep 2016 05:35:09 -0500</pubDate>
        <link>http://rfeie.com/2016/09/10/blog-working-with-calendar-google-api.html</link>
        <guid isPermaLink="true">http://rfeie.com/2016/09/10/blog-working-with-calendar-google-api.html</guid>
        
        <category>ruby-on-rails</category>
        
        <category>api</category>
        
        <category>little-clerk</category>
        
        
      </item>
    
      <item>
        <title>Welcome to My New Site!</title>
        <description>&lt;p&gt;Good morning/afternoon/evening to whoever you are. 
Welcome to my new site. &lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;If you have read my about page I am sure you know I am a self-taight programmer. And as I have started to learn more and travelled further off the tutorial-beaten-path I realized I can share some of the knowledge I am starting to accrue with the hope of benefitting someone, somewhere.&lt;/p&gt;

&lt;p&gt;A couple notes about this site. This site is a staticly generated site written in Jekyll and hosted on &lt;a href=&quot;https://github.com/rfeie/rfeie.github.io&quot;&gt;Github&lt;/a&gt;. I used the &lt;a href=&quot;http://bourbon.io/&quot;&gt;Bourbon&lt;/a&gt; and &lt;a href=&quot;http://neat.bourbon.io/&quot;&gt;Neat&lt;/a&gt; as well as &lt;a href=&quot;http://refills.bourbon.io/&quot;&gt;Refills&lt;/a&gt; to scaffold it together.&lt;/p&gt;

&lt;p&gt;What you can expect from me in the near future:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Updates on a Rails app that uses the Google Calendar API&lt;/li&gt;
  &lt;li&gt;Updates on learning Angular 2 and a front-end JavaScript framework in general&lt;/li&gt;
  &lt;li&gt;Work on updating Adobe InDesign JavaScript scripts&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 03 Sep 2016 19:35:09 -0500</pubDate>
        <link>http://rfeie.com/2016/09/03/blog-welcome-to-my-new-site.html</link>
        <guid isPermaLink="true">http://rfeie.com/2016/09/03/blog-welcome-to-my-new-site.html</guid>
        
        <category>news</category>
        
        
      </item>
    
      <item>
        <title>Find an area noone cares about and care about it a lot</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://devchat.tv/js-jabber/226-jsj-test-doubles-with-justin-searls&quot;&gt;JavaScript Jabber&lt;/a&gt; Weekly iteration on testing APIs&lt;/p&gt;

&lt;p&gt;This was a piece of advice about how to find an open source project to create. Find an aspect of the envrionment you work in that noone seems to pay enough attention to and then become the expert on it. This might sound relatively obvious but this line jumped out at me because it calls for focus and care. You not only figure out the need but focus on it and spend your time understanding it’s ins and outs. This is related to a &lt;a href=&quot;https://blog.codinghorror.com/programming-is-hard-lets-go-shopping/&quot;&gt;blog post&lt;/a&gt; I read recently about mastering the domains that are central to your product.&lt;/p&gt;

</description>
        <pubDate>Thu, 18 Aug 2016 19:35:09 -0500</pubDate>
        <link>http://rfeie.com/2016/08/18/fn-find-an-area-no-one-cares-about.html</link>
        <guid isPermaLink="true">http://rfeie.com/2016/08/18/fn-find-an-area-no-one-cares-about.html</guid>
        
        <category>testing</category>
        
        <category>api</category>
        
        
      </item>
    
      <item>
        <title>Anything you don't own wrap in a class or adapter</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://thoughtbot.com/upcase/&quot;&gt;upcase.com&lt;/a&gt; Weekly iteration on testing APIs&lt;/p&gt;

&lt;p&gt;Ideally if you are interacting with the outside world either through APIs or outside gems you should be putting your connection to it into a wrapper or adapter class. This creates an internal API for the outside source you can control. So if you want to substitute the what is in the wrapper or if the outside API changes you have a central place to change or fix.&lt;/p&gt;

</description>
        <pubDate>Thu, 18 Aug 2016 19:35:09 -0500</pubDate>
        <link>http://rfeie.com/2016/08/18/fn-wrapping-an-api.html</link>
        <guid isPermaLink="true">http://rfeie.com/2016/08/18/fn-wrapping-an-api.html</guid>
        
        <category>testing</category>
        
        <category>api</category>
        
        
      </item>
    
      <item>
        <title>Testing is the canary in the coal mine. If testing is hard, refactor the code.</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.poodr.com//&quot;&gt;Practical Object-Oriented Design in Ruby&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a type of code smell. If you are trying to test a part or all of your program and you are having a lot of trouble it should be a warning sign that the code is either not well structured or you need to consider refactoring the portion that is giving you trouble.&lt;/p&gt;

</description>
        <pubDate>Thu, 18 Aug 2016 19:35:09 -0500</pubDate>
        <link>http://rfeie.com/2016/08/18/fn-testing-canary-in-coal-mine.html</link>
        <guid isPermaLink="true">http://rfeie.com/2016/08/18/fn-testing-canary-in-coal-mine.html</guid>
        
        <category>testing</category>
        
        <category>clean-code</category>
        
        
      </item>
    
      <item>
        <title>Keep Controllers Simple, ideally you should restrict yourself to the seven basic verbs</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://thoughtbot.com/upcase/&quot;&gt;upcase.com&lt;/a&gt; TDD Rails Trail&lt;/p&gt;

&lt;p&gt;This is a short-hand rule or code smell in Rails to avoid putting too much responsibility in the controller. Any Model related code should go into the model. And if you have a lot of extra responsibility in a controller consider refactoring that responsiblity into another controller.&lt;/p&gt;

</description>
        <pubDate>Thu, 18 Aug 2016 19:35:09 -0500</pubDate>
        <link>http://rfeie.com/2016/08/18/fn-keep-controllers-simple-seven-verbs.html</link>
        <guid isPermaLink="true">http://rfeie.com/2016/08/18/fn-keep-controllers-simple-seven-verbs.html</guid>
        
        <category>ruby-on-rails</category>
        
        <category>clean-code</category>
        
        
      </item>
    
      <item>
        <title>Errors handling should be foundational to your program</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.meetup.com/8th-light-university/events/232280756/&quot;&gt;8th Light University&lt;/a&gt; Facing Failure&lt;/p&gt;

&lt;p&gt;How your programs handles errors should be as well thought out as how you structure any other large part of your program. Errors are often forgotten or intermingled in the execution code. Making the program hard to reason and hard to update.&lt;/p&gt;

</description>
        <pubDate>Thu, 18 Aug 2016 19:35:09 -0500</pubDate>
        <link>http://rfeie.com/2016/08/18/fn-errors-as-values.html</link>
        <guid isPermaLink="true">http://rfeie.com/2016/08/18/fn-errors-as-values.html</guid>
        
        <category>clean-code</category>
        
        
      </item>
    
      <item>
        <title>Code should be designed like a M&amp;M.</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.meetup.com/8th-light-university/events/232280756/&quot;&gt;8th Light University&lt;/a&gt; Facing Failure&lt;/p&gt;

&lt;p&gt;Ultimately this is related to separation of concerns. This imagines a program as a M&amp;amp;M With the center being what you want the code to do and the candy shell handling the connection outside world, this includes security, data access, and error handling.&lt;/p&gt;

</description>
        <pubDate>Thu, 18 Aug 2016 19:35:09 -0500</pubDate>
        <link>http://rfeie.com/2016/08/18/fn-designing-code-candy-bar.html</link>
        <guid isPermaLink="true">http://rfeie.com/2016/08/18/fn-designing-code-candy-bar.html</guid>
        
        <category>clean-code</category>
        
        
      </item>
    
  </channel>
</rss>
